select(cran,-time)
-5:20
-(5:20)
select(cran,-(5:20))
select(cran,-(X:size))
filter(Cran,package="swirl")
filter(Cran,package=="swirl")
filter(cran,package=="swirl")
url31 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url32 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url31,"GDPd.csv")
download.file(url32,"ed.csv")
GDPddf <- read.csv("GDPd.csv")
eddf <- read.csv("ed.csv")
filter(cran, r_version == "3.1.1", country == "US"
)
?comparision
?Comparision
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN"
)
filter(cran, country=="US" | country == "IN")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran,)size:ip_id
cran2 <- select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip)
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3 <- select(cran,ip_id,package,size)
cran3
mutate(Cran3,size_mb=size/2^20)
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_mb=size_mb/2^10)
mutate(cran3,size_mb=size/2^20,size_mb=size_mb/2^10)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
head(GDPddf,3)
head(eddf,3)
head(GDPddf)
head(eddf,3)
merge(GDPddf,eddf,by.x = "X",by.y = "CountryCode",all = FALSE)
head(GDPddf)
merge <- merge(GDPddf,eddf,by.x = "X",by.y = "CountryCode",all = FALSE)
nrow(merge)
merge <- merge(GDPddf,eddf,by.y = "CountryCode",all = FALSE)
merge <- merge(GDPddf,eddf,by = "CountryCode",all = FALSE)
GDPddf <- read.csv("GDPd.csv",skip = 4)
merge <- merge(GDPddf,eddf,by = "CountryCode",all = FALSE)
merge <- merge(GDPddf,eddf,by.x = "X",by.y = "CountryCode",all = FALSE)
nrow(merge)
GDPddf <- read.csv("GDPd.csv",skip = 4,nrow=190)
eddf <- read.csv("ed.csv")
merge <- merge(GDPddf,eddf,by.x = "X",by.y = "CountryCode",all = FALSE)
nrow(merge)
head(merge)
arrange(merge,desc(X.2))
arrange(merge,desc(X.2))[13:]
arrange(merge,desc(X.2))[13,]
arrange(merge,desc(X.2))[13,X.3]
arrange(merge,desc(X.2))[13,x.3]
arrange(merge,desc(X.2))[13,"X.3"]
arrange(merge,desc(X.2))[13,X\.3]
arrange(merge,desc(X.2))[13,X/.3]
arrange(merge,desc(X.2))[13,2]
arrange(merge,desc(X.2))[13,3]
arrange(merge,desc(X.2))[13,]
arrange(merge,desc(X.2))[13,4]
arrange(merge,desc(X.2))[13,5]
arrange(merge,desc(X.2))[13,6]
head(arrange(merge,desc(X.2)))
head(arrange(merge,desc(X.2)),13)
head(arrange(merge,desc(X.2)))
GDPddf <- read.csv("GDPd.csv",skip = 4,nrow=190,col.names = c("CountryCode","Rank","Economy","Total"),select=c(1,2,4,5))
GDPddf <- read.csv("GDPd.csv",skip = 4,nrow=190,col.names = c("CountryCode","Rank","Economy","Total"),select = c(1,2,4,5))
GDPddf <- read.csv("GDPd.csv",skip = 4,nrow=190,col.names = c("CountryCode","Rank","Economy","Total"),select(1,2,4,5))
GDPddf <- read.csv("GDPd.csv",skip = 4,nrow=190,select=c(1,2,4,5),col.names = c("CountryCode","Rank","Economy","Total"))
GDPddf <- read.csv("GDPd.csv",skip = 4,nrow=190,col.names = c("CountryCode","Rank","x","Economy","Total"))
GDPddf <- read.csv("GDPd.csv",skip = 4,nrow=190)
eddf <- read.csv("ed.csv")
merge <- merge(GDPddf,eddf,by.x = "X",by.y = "CountryCode",all = FALSE)
nrow(merge)
head(merge)
arrange(merge,desc(X.1))[13,]
merge["Income"]
merge$'Income'
tapply(merge$'X.1',merge$'Income',mean)
merge
merge$'GDP'
merge$'X.1'
swirl()
merge$RankGroups <- cut2(merge$Rank, g=5)
table(merge$RankGroups, merge$`Income Group`)
merge$RankGroups <- cut(merge$Rank, g=5)
merge$RankGroups <- cut(merge$Rank, g=5)
merge$RankGroups <- cut(merge$'X.1', g=5)
merge$RankGroups <- cut2(merge$'X.1', g=5)
??cut2
?cut
install.packages("KernSmooth")
?kernSmooth
library("KernSmooth", lib.loc="~/R/win-library/3.2")
library("swirl", lib.loc="~/R/win-library/3.2")
Prudhvi Indana
swirl()
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
path2csv
nrgtr
path2csv
swirl()
library("swirl", lib.loc="~/R/win-library/3.2")
swirl()
library("swirl", lib.loc="~/R/win-library/3.2")
swirl()
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
tbl_df()
cran
?select
select(cran,ip_id,package,country)
5:20
select(Cran, r_arch:country)
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(5:20))
select(cran,-(X:size)
)
filter(cran,package=='swirl')
filter(Cran,r_version=="3.1.1",country == "US")
filter(cran,r_version=="3.1.1",country == "US")
?Comparison
filter(cran,r_version=="3.0.2",country == "IN")
filter(cran,r_version<="3.0.2",country == "IN")
filter(cran,country == "IN" | countery == "US")
filter(cran,country == "IN" | country == "US")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500,r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version)
)
cran2 <-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(Cran2,package,ip_id)
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3 <- select(ip_id,package,size)
cran3 <- select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb = size / 2^20)
mutate(cran3,size_mb = size / 2^20,size_gb = size_mb/2^10)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
?par
library("swirl")
prudhvi Indana
swirl()
head(pollution)
dim(pollution)
summary(pollution,pm25)
summary(pollution$pm25)
qunatile(ppm)
quantile(ppm)
boxplot(ppm,col="blue")
abline(h=12)
hist(ppm,col="green")
rug(ppm)
low
high
hist(ppm,col='green',breaks = 100)
rug(ppm)
hist(ppm,col="green")
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
reg <- table(pollution$region)
reg
with(reg,barplot(col="wheat",main="Number of Countus in Each Region")
)
with(reg,barplot(col="west",main="Number of Countiess in Each Region"))
barplot(reg,col="west",main="Number of Countiess in Each Region")
barplot(reg,col="wheat",main="Number of Countiess in Each Region")
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pm25~region,data=pollution,col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
subset(pollution$region == "east")
?subset
subset(pollution,region == "east")
east <- subset(pollution,region == "east")
head(east)
hist(east$pm25,col="green")
subset(pollution$pm25,region == "west") %>% hist(col="green")
hist(subset(pollution$pm25,region =="west")$pm25,col="green"
)
hist(subset(pollution,region =="west")$pm25,col="green")
hn
fnh
gn
tgbg
hnh
ntnt
nthn
hnht
;
;
?plot
with(pollution,plot(latitude,pm25))
abline(h=12.lwd=2,lty=2)
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,pollution$pm25,col=pollution$region)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow=c(1,2),mar=c(5,4,2,1))
west <- subset(pollution,region="west")
west <- subset(pollution,region=="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="East")
?Devices
with(faithful,plot(eruption,waiting))
with(faithful,plot(eruptions,waiting))
title("Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title("Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,"geyserplot.png")
dev.copy(png,file="geyserplot.png")
dev.off()
head(cars)
with(cars,plot(speed,dist))
text(mean(Cars$speed),max(Cars$dist),"SWIRL rules!")
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(State)
head(state)
table(state$region)
xyplot(Life.Exp~Income | region,state,c(4,1))
xyplot(Life.Exp~Income | region,state,layout=c(4,1))
xyplot(Life.Exp~Income | region,state,layout=c(2,2))
swirl()
head(mpg)
dim(mpg)
table(mpg$model)
qplot(disp,hwy,data=mpg)
qplot(displ,hwy,data=mpg)
install.packages("rdb")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2", repos="https://cran.rstudio.com/")
install.packages("ggplot2")
library(ggplot2)
library(swirl)
swirl()
qplot(displ,hwy,data=mpg)
install.packages("rdb", repos="https://cran.rstudio.com/")
install.packages("rdb")
install.packages("rdb")
install.packages("rdb")
qplot(displ,hwy,data=mpg)
install.packages("labeling", repos="https://cran.rstudio.com/")
install.packages("labeling", repos = "https://cran.rstudio.com/")
qplot(displ,hwy,data=mpg)
library(qqplot2)
library(ggplot2)
qplot(displ,hwy,data=mpg)
install.packages("gtable", repos = "https://cran.rstudio.com/")
install.packages("gtable", repos = "https://cran.rstudio.com/")
install.packages("gtable", repos = "https://cran.rstudio.com/")
install.packages("gtable", repos = "https://cran.rstudio.com/")
install.packages("gtable", repos = "https://cran.rstudio.com/")
install.packages("gtable", repos = "https://cran.rstudio.com/")
install.packages("gtable", repos = "https://cran.rstudio.com/")
install.packages("gtable", repos = "https://cran.rstudio.com/")
install.packages("gtable", repos = "https://cran.rstudio.com/")
install.packages("gtable", repos = "https://cran.rstudio.com/")
install.packages("gtable", repos = "https://cran.rstudio.com/")
install.packages("gtable", repos = "https://cran.rstudio.com/")
install.packages("gtable", repos="https://cran.rstudio.com/")
install.packages("gtable")
library(swirl)
swirl()
qplot(displ,hwy,data=mpg)
head(airquality)
range(airquality$Ozone,na.rm=TRUE)
range(airquality$Ozone)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb",col.axis="blue",col.lab="red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main = "Ozone and Wind in New York City")
?plot
with(airquality,plot(Wind,Ozone))
title(main = "Ozone and Wind in New York City")
par(length())
par(length
)
length(par)
length(par())
names(par())
par()$pin
par()$fg
par()$pch
par()$lty
with(airquality,plot(Wind,Ozone,type="n"))
plot(airquality$Wind,airquality$Ozone,type = "n")
title(main="Wind and Ozone in NYC")
?subset
may <- subset(airquality,Month=5)
may <- subset(airquality,Month==5)
plot(may$Wind,may$Ozone)
?par)
?par
plot(may$Wind,may$Ozone,col="blue,cex=3)
""
"
plot(may$Wind,may$Ozone,col="blue",cex=3)
plot(may$Wind,may$Ozone,col="blue",cex=2)
?cex
?par
plot(may$Wind,may$Ozone,col="blue",cex=2)
plot(may$Wind,may$Ozone,col="blue",cex=17)
plot(may$Wind,may$Ozone,col="blue",pch=2)
plot(may$Wind,may$Ozone,col="blue",pch=17)
points(may$Wind,may$Ozone,col="blue",pch=17)
plot(airquality$Wind,airquality$Ozone,type = "n")
title(main="Wind and Ozone in NYC")
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality,Month != 5)
points(notmay$Wind,notmay$Ozone,col='red',pck=*)
points(notmay$Wind,notmay$Ozone,col='red',pck='*')
points(notmay$Wind,notmay$Ozone,col='red',pch='*')
points(notmay$Wind,notmay$Ozone,col='red',pch=*)
points(notmay$Wind,notmay$Ozone,col='red',pch=8)
points(notmay$Wind,notmay$Ozone,col='red',pch=*)
points(notmay$Wind,notmay$Ozone,col='red',pch=)
points(notmay$Wind,notmay$Ozone,col='red',pch=*)
points(notmay$Wind,notmay$Ozone,col='red',pch=8)
?legend
legend("topright",c(pch=(17,8),col=c("bliue","red",legend="May","Other Months")))
legend("topright",c(pch=(17,8),col=c("bliue","red"),legend=c("May","Other Months"))
legend("topright",pch=c(17,8),col=c("bliue","red"),legend=c("May","Other Months"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality#Wind,airquality$Ozone,main="Ozone and Wind)
""
"
""
"
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main = "Ozone and Solar Radiation")
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Solar.R,airquality$Ozone,main="Ozone and solar Radiation")
plot(airquality$Solar.R,airquality$Ozone,main="Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in New York City",outer = True)
mtext("Ozone and Weather in New York City",outer = TRUE)
setwd("E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1")
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help("lubridate")
help(package=lubridate)
this_day <- today()
this_dat
this_day
year(this_day)
wday(this_day)
wday(this_day,label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05017")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 may 17")
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
lapply(st2,ymd)
lapply(dt2,ymd)
ymd(dt2)
update(this_moment,hours=8,minutes=34,seconds=55)
this_moment
update(this_moment,hours=8,minutes=01)
update(this_moment,hours=10,minutes=16)
update(this_moment,hours=10,minutes=16,seconds=0)
this_moment <- update(this_moment,hours=10,minutes=16,seconds=0)
thuis_moment
this_moment
?read.csv
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot1.R', echo=TRUE)
setwd("E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1")
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot1.R', echo=TRUE)
head(data)
help(library=dplry)
help(library="dplry")
help(package="dplyr")
?selec
?select
select(data,Date=="2007-02-01" | Date == "2007-02-02")
select(data,Date="2007-02-01" | Date = "2007-02-02")
filter(data,Date="2007-02-01" | Date = "2007-02-02")
select(data,Date=="2007-02-01" | Date == "2007-02-02")
filter(data,Date=="2007-02-01" | Date == "2007-02-02")
install.packages("htmltools")
---
?read.table
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot1.R', echo=TRUE)
plotdata <- filter(data,Date=="2007-02-01" | Date == "2007-02-02")
plotdata
tail(data)
plotdata <- filter(data,Date=="01/02/2007" | Date == "02/02/2007")
plotdata <- filter(data,Date=="02/01/2007" | Date == "02/02/2007")
plotdata <- filter(data,Date=="02/01/2007" || Date == "02/02/2007")
?read.table
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot1.R', echo=TRUE)
plotdata <- filter(data,Date=="02/01/2007")
plotdata <- filter(data,Date=="2/1/2007")
plotdata <- filter(data,Date=="1/2/2007" || Date == "2/2/2007")
plotdata <- filter(data,Date=="1/2/2007" | Date == "2/2/2007")
tail(plotdata)
rm(data)
with(data,hist(Global_active_power,main="Global Active Power"))
data <- read.table("household_power_consumption.txt",sep = ";",header=TRUE,stringsAsFactors = TRUE,na.strings = '?')
data <- subset(data,Date=="1/2/2007" | Date == "2/2/2007")
with(data,hist(Global_active_power,main="Global Active Power",col="red"))
with(data,hist(Global_active_power,main="Global Active Power",col="red"))
data <- read.table("household_power_consumption.txt",sep = ";",header=TRUE,stringsAsFactors = TRUE,na.strings = '?')
with(data,hist(Global_active_power,main="Global Active Power",col="red",xlab="Global active power(kilowatts"))
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot1.R', echo=TRUE)
with(data,hist(Global_active_power,main="Global Active Power",col="red",xlab="Global active power(kilowatts)")
)
col="red",xlab="Global active power (kilowatts)"))
with(data,hist(Global_active_power,main="Global Active Power",
col="red",xlab="Global active power (kilowatts)"))
?dev.copy
dev.copy(png,"plot1.png",width=480,height=480)
dev.off()
data.Date <- as.Date(data.Date)
data.Date <- as.Date(data$Date)
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot2.R', echo=TRUE)
View(data)
with(data,plot(Date,Global_active_power,
col="red",xlab="Global active power (kilowatts)"))
?plot
data$Date
with(data,plot(Date,Global_active_power,
col="red",ylab="Global active power (kilowatts)"))
?strptime
head(data)
tail(data)
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot2.R', echo=TRUE)
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot2.R', echo=TRUE)
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot2.R', echo=TRUE)
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot2.R', echo=TRUE)
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot2.R', echo=TRUE)
?par()
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot2.R', echo=TRUE)
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot2.R', echo=TRUE)
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot2.R', echo=TRUE)
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot2.R', echo=TRUE)
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot3.R', echo=TRUE)
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot3.R', echo=TRUE)
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot2.R', echo=TRUE)
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot3.R', echo=TRUE)
?par()
?lines
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot3.R', echo=TRUE)
?legend
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot3.R', echo=TRUE)
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot3.R', echo=TRUE)
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot3.R', echo=TRUE)
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot3.R', echo=TRUE)
?lwd
?par()$lwd
source('E:/Study stuff/Subjects and courses/Current subs/Coursera Certifications/Exploratory Data Analysis/Week 1/ExData_Plotting1/plot3.R', echo=TRUE)
swirl()
?transform
